# lexical and syntactical details

Alphabet:
	a. Upper (A-Z) and lower case letters (a-z) of the English alphabet
	b. Underline character '_'
	c. Decimal digits (0-9)

Lexic:
a. special symbols:
	- operators + - * / = <= == != >= < > and or not
	- separators { } : space newline , [ ]
	- reserved words: int read_val In_case start> <end While divides Increment show For_each else char array from

b. identifiers:
	letter = "A" | "B" | "C" | ... | "Z" | "a" | "b" | ... | "z"
	digit = "0" | "1" | ... | "9"
	- sequence of letters and digits, such that the digits are only at the end
	identifier = letter | letter {letter | digit}

c. constants:
	1. integer
		nzdigit = "1" | ... | "9"
		integer = ["-"|"+"]nzdigit{digit} | "0"
	2. character
		character = 'letter' | 'digit'
	3. boolean
		boolean = "true" | "false"
	4. string
		char = letter | digit
		string = char{char}
		constchar = "string"
	
d. user defined type:
	cTYPE = integer | character | string | boolean
	my_type typeName {
		cTYPE field1
		...
		cTYPE fieldn
	}

